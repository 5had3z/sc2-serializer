digraph "/home/runner/work/sc2-serializer/sc2-serializer/include/database.hpp"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="/home/runner/work/sc2\l-serializer/sc2-serializer\l/include/database.hpp",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Database framework for reading and writing serialized replay data. ReplayDatabase is templated on any..."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="data_structures/replay\l_interface.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d04/replay__interface_8hpp.html",tooltip="Common interface and utilities for replay data structures."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="common.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d3a/common_8hpp.html",tooltip="This is one of \"those\" files that just contains a few bits and bobs such as data-vectorization,..."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="enums.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d93/enums_8hpp.html",tooltip="Common enums in StarCraft II and accompanying tools such as enum->string and enum->one-hot."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="spdlog/fmt/bundled\l/format.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="algorithm",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="array",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="vector",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="boost/pfr.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="cassert",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="span",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="serialize.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d31/serialize_8hpp.html",tooltip="Generic Serialisation and Deserialisation Methods. A combination of C++20 Concepts and Requires claus..."];
  Node12 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="concepts",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="iostream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="boost/iostreams/device\l/file.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="boost/iostreams/filter\l/zlib.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="boost/iostreams/filtering\l_stream.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="spdlog/spdlog.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="filesystem",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="fstream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="memory",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ranges",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="unordered_set",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
